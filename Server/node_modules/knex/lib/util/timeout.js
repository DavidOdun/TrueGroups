<<<<<<< HEAD
=======
const Bluebird = require('bluebird');
const delay = require('./delay');

>>>>>>> 69f837176d9bbf067934e3627836aad9e5599093
class KnexTimeoutError extends Error {
  constructor(message) {
    super(message);
    this.name = 'KnexTimeoutError';
  }
}

<<<<<<< HEAD
function timeout(promise, ms) {
  return new Promise(function(resolve, reject) {
    const id = setTimeout(function() {
      reject(new KnexTimeoutError('operation timed out'));
    }, ms);

    function wrappedResolve(value) {
      clearTimeout(id);
      resolve(value);
    }

    function wrappedReject(err) {
      clearTimeout(id);
      reject(err);
    }

    promise.then(wrappedResolve, wrappedReject);
  });
}

module.exports.KnexTimeoutError = KnexTimeoutError;
module.exports.timeout = timeout;
=======
module.exports.KnexTimeoutError = KnexTimeoutError;
module.exports.timeout = (promise, ms) =>
  Bluebird.resolve(
    Promise.race([
      promise,
      delay(ms).then(() =>
        Promise.reject(new KnexTimeoutError('operation timed out'))
      ),
    ])
  );
>>>>>>> 69f837176d9bbf067934e3627836aad9e5599093
